# ============================================================================
# GO DISTRIBUTED HASHCAT - ENVIRONMENT CONFIGURATION
# ============================================================================
# Copy this file to .env and adjust values for your environment
# Usage: cp .env-example .env && nano .env

# ----------------------------------------------------------------------------
# ENVIRONMENT SELECTION
# ----------------------------------------------------------------------------
# Choose your setup: development, staging, production
ENVIRONMENT=development

# ----------------------------------------------------------------------------
# SERVER CONFIGURATION
# ----------------------------------------------------------------------------
# Using HASHCAT_ prefix for app-specific config
HASHCAT_SERVER_PORT=1337
# Alternative: You can also use standard names
PORT=1337

# ----------------------------------------------------------------------------
# DATABASE CONFIGURATION
# ----------------------------------------------------------------------------
# Database type: sqlite, postgres, mysql
HASHCAT_DATABASE_TYPE=sqlite
# Alternative standard names
DB_TYPE=sqlite

# =============================================================================
# DEVELOPMENT SETUP (Recommended for local development)
# =============================================================================
# SQLite Configuration (Simple setup for development)
HASHCAT_DATABASE_PATH=./data/hashcat.db
DB_PATH=./data/hashcat.db

# =============================================================================
# PRODUCTION SETUP (PostgreSQL - Recommended for production)
# =============================================================================
# Uncomment for PostgreSQL production setup:
# HASHCAT_DATABASE_TYPE=postgres
# HASHCAT_DATABASE_HOST=localhost
# HASHCAT_DATABASE_PORT=5432
# HASHCAT_DATABASE_NAME=hashcat_distributed
# HASHCAT_DATABASE_USER=hashcat
# HASHCAT_DATABASE_PASSWORD=your_secure_password_here

# Alternative standard PostgreSQL names:
# DB_TYPE=postgres
# DB_HOST=localhost  
# DB_PORT=5432
# DB_NAME=hashcat_distributed
# DB_USER=hashcat
# DB_PASSWORD=your_secure_password_here

# =============================================================================
# MYSQL SETUP (Alternative production option)
# =============================================================================
# Uncomment for MySQL production setup:
# HASHCAT_DATABASE_TYPE=mysql
# HASHCAT_DATABASE_HOST=localhost
# HASHCAT_DATABASE_PORT=3306
# HASHCAT_DATABASE_NAME=hashcat_distributed
# HASHCAT_DATABASE_USER=hashcat
# HASHCAT_DATABASE_PASSWORD=your_secure_password_here

# Database Connection Pool Settings
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=5
DB_CONN_MAX_LIFETIME=30m
DB_CONN_MAX_IDLE_TIME=5m

# ----------------------------------------------------------------------------
# FILE UPLOAD CONFIGURATION
# ----------------------------------------------------------------------------
# Upload directory configuration
HASHCAT_UPLOAD_DIRECTORY=./uploads
# Alternative standard name
UPLOAD_DIR=./uploads
MAX_FILE_SIZE=100MB
ALLOWED_EXTENSIONS=txt,hash,hccapx,hccap,cap,lst

# ----------------------------------------------------------------------------
# SECURITY CONFIGURATION
# ----------------------------------------------------------------------------
# CORS Settings (adjust origins for your domain)
CORS_ORIGINS=http://localhost:3000,https://your-domain.com
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=Content-Type,Authorization,X-Requested-With

# Rate Limiting
RATE_LIMIT_RPM=100
RATE_LIMIT_BURST=10

# API Keys (if implementing authentication)
# API_SECRET_KEY=your_super_secret_api_key_here
# JWT_SECRET=your_jwt_signing_secret_here

# ----------------------------------------------------------------------------
# LOGGING CONFIGURATION
# ----------------------------------------------------------------------------
LOG_LEVEL=info
LOG_FORMAT=json
LOG_FILE=

# ----------------------------------------------------------------------------
# METRICS & MONITORING
# ----------------------------------------------------------------------------
METRICS_ENABLED=true
METRICS_PORT=9090

# ----------------------------------------------------------------------------
# AGENT CONFIGURATION
# ----------------------------------------------------------------------------
AGENT_HEARTBEAT=30s
AGENT_TIMEOUT=5m
MAX_JOBS_PER_AGENT=5

# ----------------------------------------------------------------------------
# PRODUCTION DEPLOYMENT SETTINGS
# ----------------------------------------------------------------------------
# Environment
ENVIRONMENT=production

# TLS/SSL Configuration (for HTTPS)
# ENABLE_TLS=false
# TLS_CERT_FILE=./certs/server.crt
# TLS_KEY_FILE=./certs/server.key

# ----------------------------------------------------------------------------
# EXTERNAL SERVICES (Optional)
# ----------------------------------------------------------------------------
# Redis for caching and session management
# REDIS_URL=redis://localhost:6379/0
# REDIS_PASSWORD=

# Elasticsearch for advanced logging and search
# ELASTICSEARCH_URL=http://localhost:9200
# ELASTICSEARCH_INDEX=hashcat-logs

# Email notifications (for job completion alerts)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# NOTIFICATION_EMAIL=admin@your-domain.com

# ----------------------------------------------------------------------------
# DOCKER DEPLOYMENT CONFIGURATION
# ----------------------------------------------------------------------------
# Container settings
# DOCKER_NETWORK=hashcat-network
# CONTAINER_NAME=hashcat-server
# CONTAINER_RESTART_POLICY=unless-stopped

# Volume mounts
# DOCKER_DATA_VOLUME=/var/lib/hashcat/data
# DOCKER_UPLOAD_VOLUME=/var/lib/hashcat/uploads
# DOCKER_LOGS_VOLUME=/var/log/hashcat

# ----------------------------------------------------------------------------
# DEVELOPMENT ENVIRONMENT EXAMPLES
# ----------------------------------------------------------------------------
# Quick development setup examples:

# === Development with SQLite (Default) ===
# ENVIRONMENT=development
# HASHCAT_SERVER_PORT=1337
# HASHCAT_DATABASE_TYPE=sqlite  
# HASHCAT_DATABASE_PATH=./data/hashcat-dev.db
# HASHCAT_UPLOAD_DIRECTORY=./uploads-dev
# LOG_LEVEL=debug

# === Development with PostgreSQL ===
# ENVIRONMENT=development
# HASHCAT_SERVER_PORT=1337
# HASHCAT_DATABASE_TYPE=postgres
# HASHCAT_DATABASE_HOST=localhost
# HASHCAT_DATABASE_PORT=5432
# HASHCAT_DATABASE_NAME=hashcat_dev
# HASHCAT_DATABASE_USER=dev_user
# HASHCAT_DATABASE_PASSWORD=dev_password

# === Multiple Developer Setup ===
# Developer 1: PORT=1337
# Developer 2: PORT=1338  
# Developer 3: PORT=1339

# ----------------------------------------------------------------------------
# CLOUD DEPLOYMENT SETTINGS
# ----------------------------------------------------------------------------
# AWS S3 for file storage (if using cloud storage)
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key
# S3_BUCKET_NAME=hashcat-files

# Google Cloud Storage
# GCS_PROJECT_ID=your-project-id
# GCS_BUCKET_NAME=hashcat-files
# GOOGLE_APPLICATION_CREDENTIALS=./service-account.json

# ----------------------------------------------------------------------------
# HASHCAT SPECIFIC SETTINGS
# ----------------------------------------------------------------------------
# Hashcat binary path (if not in PATH)
# HASHCAT_BINARY_PATH=/usr/bin/hashcat

# Default hashcat settings
# DEFAULT_WORKLOAD_PROFILE=3
# DEFAULT_OPTIMIZED_KERNEL=true
# DEFAULT_STATUS_TIMER=10

# GPU/Hardware settings
# ENABLE_GPU=true
# OPENCL_DEVICE_TYPES=1,2  # 1=GPU, 2=CPU
# CUDA_VISIBLE_DEVICES=0,1

# ============================================================================
# USAGE EXAMPLES & DEPLOYMENT NOTES:
# ============================================================================

# === DEVELOPMENT USAGE ===
# 1. Copy and setup:
#    cp .env-example .env
#    nano .env  # Edit values
#    
# 2. Basic development setup:
#    ENVIRONMENT=development
#    HASHCAT_SERVER_PORT=1337
#    HASHCAT_DATABASE_TYPE=sqlite
#    HASHCAT_DATABASE_PATH=./data/hashcat-dev.db
#
# 3. Run server:
#    ./bin/server

# === PRODUCTION USAGE ===
# 1. Copy and configure:
#    cp .env-example .env
#    nano .env  # Set production values
#
# 2. Production setup example:
#    ENVIRONMENT=production
#    HASHCAT_SERVER_PORT=80
#    HASHCAT_DATABASE_TYPE=postgres
#    HASHCAT_DATABASE_HOST=db.internal
#    HASHCAT_DATABASE_NAME=hashcat_prod
#    HASHCAT_DATABASE_USER=hashcat_user
#    HASHCAT_DATABASE_PASSWORD=super_secure_password
#
# 3. Deploy:
#    ./bin/server

# === ENVIRONMENT VARIABLE PRIORITY ===
# 1. .env file (highest priority)
# 2. Environment variables (HASHCAT_* or standard names)
# 3. config.yaml fallback
# 4. Default values (lowest priority)

# === SUPPORTED VARIABLE NAMES ===
# HASHCAT_SERVER_PORT      or PORT
# HASHCAT_DATABASE_TYPE    or DB_TYPE  
# HASHCAT_DATABASE_PATH    or DB_PATH
# HASHCAT_DATABASE_HOST    or DB_HOST
# HASHCAT_DATABASE_PORT    or DB_PORT
# HASHCAT_DATABASE_NAME    or DB_NAME
# HASHCAT_DATABASE_USER    or DB_USER
# HASHCAT_DATABASE_PASSWORD or DB_PASSWORD
# HASHCAT_UPLOAD_DIRECTORY or UPLOAD_DIR

# === SECURITY NOTES ===
# 1. Never commit .env to git (already in .gitignore)
# 2. Use strong passwords for production databases
# 3. Consider secrets management for production
# 4. Enable TLS/SSL for production deployments
# 5. Use environment-specific database credentials

# ============================================================================
